
#include<bits/stdc++.h>
    bool dfs(int s, vector<int>adj[],vector<int>&color)
    {
        if(color[s]== -1) color[s]=1;
        
        for(auto i : adj[s])
        {
            if(color[i]==-1)
            {
                color[i]= 1 - color[s];
                if(!dfs(i,adj,color)) return false;
            }
            else if(color[i]==color[s]) return false;
        } return true;
    }

bool isGraphBirpatite(vector<vector<int>> &edges) {
	// Write your code here.
     
   int v = edges.size();
  vector<int>adj[v+1];
  for(int i=0;i<edges.size();i++)
    {
        for(int j=0;j<edges[0].size();j++)
        {
            if(edges[i][j]==1)
            {
                adj[i].push_back(j);
                adj[j].push_back(i);
            }
        }
    }
    
        vector<int>color(v+1,-1);
        
        for(int i =0;i<v;i++)
        {
            if(color[i]==-1)
            {
                if(!dfs(i,adj,color)) return false;
            }
        } return true;
}
